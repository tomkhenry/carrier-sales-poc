{
  "name": "inboundcarriersalesautomation",
  "version": "1.0.0",
  "main": "dist/app.js",
  "directories": {
    "doc": "docs",
    "test": "test"
  },
  "scripts": {
    "dev": "nodemon --exec ts-node src/app.ts",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "tsc",
    "build:frontend": "cd frontend && npm run build && cd .. && npm run copy:frontend",
    "copy:frontend": "rm -rf dist/public && cp -r frontend/dist dist/public",
    "start": "node dist/app.js",
    "test": "echo \"Error: no test specified\" && exit 1",
    "clear-db": "node scripts/clear-db.js",
    "clear-db-keep-keys": "node scripts/clear-db-preserve-keys.js",
    "load-mock-data": "node scripts/load-mock-data.js",
    "load-mock-carriers": "node scripts/load-mock-carriers.js",
    "generate-metrics": "node scripts/generate-mock-metrics.js",
    "docker:build": "docker build -t carrier-sales-api:latest .",
    "docker:run": "docker run -p 3000:3000 -e NODE_ENV=production carrier-sales-api:latest",
    "docker:dev": "docker-compose up --build",
    "docker:stop": "docker-compose down",
    "docker:logs": "docker-compose logs -f"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "dependencies": {
    "axios": "^1.12.2",
    "city-timezones": "^1.3.2",
    "cors": "^2.8.5",
    "dotenv": "^17.2.3",
    "express": "^5.1.0",
    "express-validator": "^7.2.1",
    "geolib": "^3.3.4",
    "lowdb": "^7.0.1",
    "nodemon": "^3.1.10",
    "ts-node": "^10.9.2",
    "typescript": "^5.9.3"
  },
  "devDependencies": {
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@types/node": "^24.8.1"
  }
}
